1.	(KEYWORD, void) (ID, min) (SYMBOL, () (ID, voidd) (SYMBOL, )) (SYMBOL, {) 
2.	(KEYWORD, if) (SYMBOL, () (ID, arr) (SYMBOL, [) (ID, efg) (SYMBOL, ]) (SYMBOL, ==) (ID, bcd) (SYMBOL, )) 
3.	(SYMBOL, {) (ID, b) (SYMBOL, =) (ID, b) (SYMBOL, +) (NUM, 1) (SYMBOL, ;) (SYMBOL, }) 
4.	(KEYWORD, else) (KEYWORD, if) (ID, arr) (SYMBOL, [) (ID, efg) (SYMBOL, ]) (SYMBOL, ==) (NUM, 3) (SYMBOL, :) 
5.	(SYMBOL, {) (ID, b) (SYMBOL, =) (ID, b) (SYMBOL, +) (NUM, 2) (SYMBOL, ;) 
6.	(KEYWORD, return) (SYMBOL, ;) (SYMBOL, }) 
7.	(KEYWORD, if) (SYMBOL, () (ID, arr) (SYMBOL, [) (ID, efg) (SYMBOL, ]) (SYMBOL, =) (NUM, 4) (SYMBOL, )) 
8.	(SYMBOL, {) 
9.	(ID, x) (SYMBOL, =) (NUM, 5) (SYMBOL, ;) 
10.	(ID, b) (SYMBOL, =) (ID, u) (SYMBOL, *) (NUM, 123) (SYMBOL, ;) 
11.	(KEYWORD, break) (SYMBOL, ;) (SYMBOL, }) 
12.	(KEYWORD, else) 
13.	(KEYWORD, return) (NUM, 25) (SYMBOL, ;) 
14.	(SYMBOL, }) 
1.	(KEYWORD, int) (ID, f) (SYMBOL, () (KEYWORD, int) (ID, a) (SYMBOL, )) (SYMBOL, {) 
2.	(KEYWORD, void) (ID, g) (SYMBOL, () (KEYWORD, int) (ID, b) (SYMBOL, )) (SYMBOL, {) (SYMBOL, *) 
3.	(ID, output) (SYMBOL, () (ID, b) (SYMBOL, )) (SYMBOL, ;) 
4.	(ID, f) (SYMBOL, () (ID, b) (SYMBOL, -) (NUM, 1) (SYMBOL, )) (SYMBOL, ;) 
5.	(SYMBOL, }) 
6.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, ==) (NUM, 1) (SYMBOL, )) (SYMBOL, {) 
7.	(SYMBOL, *) (ID, comment) (SYMBOL, *) 
8.	(ID, output) (SYMBOL, () (ID, a) (SYMBOL, )) (SYMBOL, ;) 
9.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;) 
10.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {) 
11.	(ID, g) (SYMBOL, () (ID, a) (SYMBOL, )) (SYMBOL, ;) 
12.	(SYMBOL, }) 
15.	(SYMBOL, }) 
17.	(SYMBOL, *) (KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
18.	(ID, f) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, ;) 
19.	(SYMBOL, }) 
20.	(SYMBOL, *) (ID, comment) (SYMBOL, *) 
